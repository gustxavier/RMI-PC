/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package client;

import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import util.ClientRMI;
import util.Contants;
import util.GetScreenSize;
import util.ManagerRMI;
import util.ServerRMI;

/**
 *
 * @author jonathan
 */
public class Manager extends javax.swing.JFrame{

    private ManagerRMI manager;

    /**
     * Creates new form Manager
     */
    public Manager(ServerRMI buffer) throws RemoteException {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("GTK+".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
        }
        initComponents();
        this.setLocation(GetScreenSize.getX(this.getSize()), GetScreenSize.getY(this.getSize()));
        
        manager = new ManagerImpl(this, buffer);
        
        Registry registry = LocateRegistry.createRegistry(2334);
        registry.rebind(Contants.RMI_MANAGER_ID, manager);
        
        buffer.addManager(registry);
    }

    public JList getBackupList() {
        return backupList;
    }
    
    public JList getMachineList() {
        return machineList;
    }

    public JLabel getBufferLabel() {
        return bufferLabel;
    }

    public JLabel getBufferSizeLabel() {
        return bufferSizeLabel;
    }

    public JLabel getMachinesLabel() {
        return machinesLabel;
    }

    public void logout(int index){
        ((ManagerImpl) manager).logout(index);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        bufferPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        backupList = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        bufferSizeLabel = new javax.swing.JLabel();
        machinesLabel = new javax.swing.JLabel();
        bufferLabel = new javax.swing.JLabel();
        machinePanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        machineList = new javax.swing.JList();
        jScrollPane3 = new javax.swing.JScrollPane();
        threadList = new javax.swing.JList();
        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        addProducer = new javax.swing.JButton();
        removeProducer = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jFormattedTextField2 = new javax.swing.JFormattedTextField();
        jLabel6 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jFormattedTextField4 = new javax.swing.JFormattedTextField();
        addConsumer = new javax.swing.JButton();
        removeConsumer = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jFormattedTextField5 = new javax.swing.JFormattedTextField();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.setTabPlacement(javax.swing.JTabbedPane.BOTTOM);
        jTabbedPane1.setName(""); // NOI18N

        backupList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(backupList);

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        jLabel1.setText("Buffer Size:");

        jLabel2.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        jLabel2.setText("Current Buffer:");

        jLabel3.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        jLabel3.setText("Machines Connected:");

        bufferSizeLabel.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N

        machinesLabel.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N

        bufferLabel.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N

        javax.swing.GroupLayout bufferPanelLayout = new javax.swing.GroupLayout(bufferPanel);
        bufferPanel.setLayout(bufferPanelLayout);
        bufferPanelLayout.setHorizontalGroup(
            bufferPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bufferPanelLayout.createSequentialGroup()
                .addGroup(bufferPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(bufferPanelLayout.createSequentialGroup()
                        .addGap(169, 169, 169)
                        .addComponent(jLabel2))
                    .addGroup(bufferPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(bufferPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(bufferPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(machinesLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE)
                    .addComponent(bufferLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bufferSizeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        bufferPanelLayout.setVerticalGroup(
            bufferPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bufferPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(bufferPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bufferPanelLayout.createSequentialGroup()
                        .addGroup(bufferPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(bufferSizeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(bufferPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(bufferLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(bufferPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(machinesLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Buffers", bufferPanel);

        machineList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        machineList.setToolTipText("");
        machineList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                machineListValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(machineList);

        threadList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane3.setViewportView(threadList);

        jLabel4.setFont(new java.awt.Font("Ubuntu", 1, 24)); // NOI18N
        jLabel4.setText("THREADS");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Producers"));

        jFormattedTextField1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        jFormattedTextField1.setText("5");

        addProducer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Actions-list-add-icon.png"))); // NOI18N
        addProducer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addProducerActionPerformed(evt);
            }
        });

        removeProducer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Actions-edit-delete-icon.png"))); // NOI18N
        removeProducer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeProducerActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel5.setText("Time");

        jFormattedTextField2.setText("1");

        jLabel6.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel6.setText("Number");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addProducer, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(removeProducer, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jFormattedTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jFormattedTextField2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                        .addComponent(jLabel6)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(addProducer, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jFormattedTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jFormattedTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(removeProducer, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Consumers"));

        jFormattedTextField4.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        jFormattedTextField4.setText("5");

        addConsumer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Actions-list-add-icon.png"))); // NOI18N
        addConsumer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addConsumerActionPerformed(evt);
            }
        });

        removeConsumer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Actions-edit-delete-icon.png"))); // NOI18N
        removeConsumer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeConsumerActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel8.setText("Time");

        jFormattedTextField5.setText("1");

        jLabel9.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel9.setText("Number");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(addConsumer, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jFormattedTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jFormattedTextField5))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                                .addComponent(jLabel9))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(removeConsumer, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(74, 144, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jFormattedTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jFormattedTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(addConsumer, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(removeConsumer, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout machinePanelLayout = new javax.swing.GroupLayout(machinePanel);
        machinePanel.setLayout(machinePanelLayout);
        machinePanelLayout.setHorizontalGroup(
            machinePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(machinePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(machinePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(machinePanelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addGroup(machinePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(machinePanelLayout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(jLabel4)))
                .addGap(23, 23, 23))
        );
        machinePanelLayout.setVerticalGroup(
            machinePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, machinePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(machinePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2)
                    .addGroup(machinePanelLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(machinePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(machinePanelLayout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(44, 44, 44)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Machines", machinePanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addProducerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addProducerActionPerformed
        // TODO add your handling code here:
        int index = machineList.getSelectedIndex();
        if (index == -1) {
            JOptionPane.showMessageDialog(this, "Select a machince first", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        try {
            long time = Integer.valueOf(jFormattedTextField1.getText()) * 1000;
            int number = Integer.valueOf(jFormattedTextField2.getText());
            
            ((ManagerImpl) manager).addProducer(index, time, number);
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Invalid number format", ex.getMessage(), JOptionPane.ERROR_MESSAGE);
            return;
        } catch (RemoteException ex) {
            JOptionPane.showMessageDialog(this, "Machine is no longer online", ex.getMessage(), JOptionPane.ERROR_MESSAGE);
            logout(index);
            return;
        }
    }//GEN-LAST:event_addProducerActionPerformed

    private void addConsumerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addConsumerActionPerformed
        // TODO add your handling code here:
        int index = machineList.getSelectedIndex();
        if (index == -1) {
            JOptionPane.showMessageDialog(this, "Select a machince first", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        try {
            long time = Integer.valueOf(jFormattedTextField4.getText()) * 1000;
            int number = Integer.valueOf(jFormattedTextField5.getText());
            
            ((ManagerImpl) manager).addConsumer(index, time, number);
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Invalid number format", ex.getMessage(), JOptionPane.ERROR_MESSAGE);
            return;
        } catch (RemoteException ex) {
            JOptionPane.showMessageDialog(this, "Machine is no longer online", ex.getMessage(), JOptionPane.ERROR_MESSAGE);
            logout(index);
            return;
        }
    }//GEN-LAST:event_addConsumerActionPerformed

    private void removeProducerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeProducerActionPerformed
        // TODO add your handling code here:
        
        int index = machineList.getSelectedIndex();
        if (index == -1) {
            JOptionPane.showMessageDialog(this, "Select a machince first", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        try {            
            ((ManagerImpl) manager).removeProducer(index);
        }  catch (RemoteException ex) {
            JOptionPane.showMessageDialog(this, "Machine is no longer online", ex.getMessage(), JOptionPane.ERROR_MESSAGE);
            logout(index);
            return;
        }
        
    }//GEN-LAST:event_removeProducerActionPerformed

    private void removeConsumerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeConsumerActionPerformed
        // TODO add your handling code here:
        int index = machineList.getSelectedIndex();
        if (index == -1) {
            JOptionPane.showMessageDialog(this, "Select a machince first", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        try {            
            ((ManagerImpl) manager).removeConsumer(index);
        }  catch (RemoteException ex) {
            JOptionPane.showMessageDialog(this, "Machine is no longer online", ex.getMessage(), JOptionPane.ERROR_MESSAGE);
            logout(index);
            return;
        }
    }//GEN-LAST:event_removeConsumerActionPerformed

    private void machineListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_machineListValueChanged
        // TODO add your handling code here:
        if(machineList.isSelectionEmpty())
            return;
        
        int index = machineList.getSelectedIndex();
        
        DefaultListModel lm = new DefaultListModel();
        lm.removeAllElements();
        
        try{
            for(int i = 1; i <= ((ManagerImpl) manager).getThreadsProducers(index); i++){
                lm.addElement("Producer Thread: "+ i);
            }
            for(int i = 1; i <= ((ManagerImpl) manager).getThreadsConsumers(index); i++){
                lm.addElement("Consumer Thread: "+ i);
            }
        } catch(RemoteException ex){
            JOptionPane.showMessageDialog(this, "Machine is no longer online", ex.getMessage(), JOptionPane.ERROR_MESSAGE);
            logout(index);
            lm.removeAllElements();
        }
        backupList.setModel(lm);
    }//GEN-LAST:event_machineListValueChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addConsumer;
    private javax.swing.JButton addProducer;
    private javax.swing.JList backupList;
    private javax.swing.JLabel bufferLabel;
    private javax.swing.JPanel bufferPanel;
    private javax.swing.JLabel bufferSizeLabel;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JFormattedTextField jFormattedTextField2;
    private javax.swing.JFormattedTextField jFormattedTextField4;
    private javax.swing.JFormattedTextField jFormattedTextField5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JList machineList;
    private javax.swing.JPanel machinePanel;
    private javax.swing.JLabel machinesLabel;
    private javax.swing.JButton removeConsumer;
    private javax.swing.JButton removeProducer;
    private javax.swing.JList threadList;
    // End of variables declaration//GEN-END:variables
}

class ManagerImpl extends UnicastRemoteObject implements ManagerRMI {

    private Manager frame;
    private ArrayList<Object> buffer;
    private ArrayList<ClientRMI> clients;
    private int bufferSize;
    private ArrayList<ServerRMI> backupServers;
    private ServerRMI currentBuffer;

    public ManagerImpl(Manager frame, ServerRMI buffer) throws RemoteException {
        super();
        this.frame = frame;
        currentBuffer = buffer;
    }

    @Override

    public void update(ArrayList<ServerRMI> bs, ArrayList<Object> b, ArrayList<ClientRMI> c) throws RemoteException {
        backupServers = bs;
        buffer = b;
        clients = c;

        DefaultListModel lm = new DefaultListModel();
        lm.removeAllElements();
        lm.addElement("Main Buffer Running");
        for (int i = 1; i <= backupServers.size(); i++) {
            lm.addElement("Backup Buffer " + i);
        }
        frame.getBackupList().setModel(lm);
        frame.getBufferSizeLabel().setText("Capacity: " + bufferSize);
        frame.getBufferLabel().setText("Usage: " + buffer.size());
        frame.getMachinesLabel().setText( clients.size()+ " machines");
        
        lm = new DefaultListModel();
        lm.removeAllElements();
        for (int i = 1; i <= clients.size(); i++) {
            lm.addElement("Machine " + i);
        }
        frame.getMachineList().setModel(lm);
        synchronized(this){
            this.notifyAll();
        }
    }

    @Override
    public void setBufferSize(int size) throws RemoteException {
        bufferSize = size;
    }
    
    public void addProducer(int index, long time, int number) throws RemoteException{
        clients.get(index).startProduction(time, number);
    }

    public void addConsumer(int index, long time, int number) throws RemoteException{
        clients.get(index).startConsumition(time, number);
    }
    
    public void removeProducer(int index) throws RemoteException{
        clients.get(index).stopProduction();
    }
    
    public void removeConsumer(int index) throws RemoteException{
        clients.get(index).stopConsumition();
    }
    
    public int getThreadsProducers(int index) throws RemoteException{
        return clients.get(index).getProducersSize();
    }
    public int getThreadsConsumers(int index) throws RemoteException{
        return clients.get(index).getConsumersSize();
    }
    
    public void logout(int index){
        try {
            currentBuffer.logout(clients.get(index));
        } catch (RemoteException ex) {
            Logger.getLogger(ManagerImpl.class.getName()).log(Level.SEVERE, null, ex);
            reconnect();
            logout(index);
        }
    }
    
    public void reconnect() {

        if (backupServers.isEmpty()) {
            try {
                this.wait();
            } catch (InterruptedException ex) {
                Logger.getLogger(Slave.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        try {
            currentBuffer.isOnTheLine();
        } catch (RemoteException ex) {
            currentBuffer = backupServers.remove(0);
        }

    }
}


